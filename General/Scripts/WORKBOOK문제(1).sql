-- SQL01_SELECT


/*-- 1번 문제
SELECT 
	DEPARTMENT_NAME 학과명,
	CATEGORY 계열
FROM 
	TB_DEPARTMENT;


-- 2번 문제
-- 기본적으로 문자열 사용은 홑따옴표('')
SELECT 
	DEPARTMENT_NAME || '의 ' || '정원은 ' || CAPACITY || '명 입니다' "학과별 정원"
FROM 
	TB_DEPARTMENT;



-- 3번 문제
-- 기본적으로 문자열 사용은 홑따옴표('')
SELECT 
	STUDENT_NAME
FROM 
	TB_STUDENT
WHERE
  -- SUBSTR 문자열 추출 8번째 숫자가 2 나 4인 사람을 찾는 문행
	DEPARTMENT_NO = '001' AND SUBSTR(STUDENT_SSN, 8, 1) IN ('2', '4')
	-- 그리고 휴학중이면 Y인 사람
  AND ABSENCE_YN = 'Y';
 
 
 
 -- 4번 문제
SELECT 
	STUDENT_NAME
FROM 
	TB_STUDENT
WHERE
	STUDENT_NO IN('A513079', 'A513090', 'A513091', 'A513110', 'A513119')
ORDER BY
	STUDENT_NAME DESC;



-- 5번 문제
SELECT 
	DEPARTMENT_NAME,
	CATEGORY
FROM 
	TB_DEPARTMENT
WHERE
	CAPACITY BETWEEN 20 AND 30;



-- 6번 문제
SELECT 
	PROFESSOR_NAME
FROM 
	TB_PROFESSOR
WHERE
	DEPARTMENT_NO IS NULL;




-- 7번 문제
SELECT
	CLASS_NO
FROM 
	TB_CLASS
WHERE 
	PREATTENDING_CLASS_NO IS NOT NULL;


-- 8번 문제
-- DISTINCT 중복된 값 제거
SELECT
	DISTINCT CATEGORY
FROM 
	 TB_DEPARTMENT;
	
	
-- 9번 문제
SELECT
	STUDENT_NO,
	STUDENT_NAME,
	STUDENT_SSN,
	STUDENT_ADDRESS
FROM 
	TB_STUDENT
WHERE 
	SUBSTR(STUDENT_ADDRESS, 1, 2) IN('전주') AND SUBSTR(STUDENT_NO, 1, 2) IN ('A2') AND ABSENCE_YN = 'N';



-- 9번 두번째 방법
SELECT 
	STUDENT_NO,
	STUDENT_NAME,
	STUDENT_SSN
FROM 
	TB_STUDENT
WHERE 
	SUBSTR(STUDENT_NO, 2, 1) = 2 AND STUDENT_ADDRESS LIKE '%전주%'
  AND ABSENCE_YN = 'N'


-- SQL02
-- 1번 문제
SELECT 
	STUDENT_NO 학번,
	STUDENT_NAME 이름,
	-- TO_CHAR로 문자열 변환
	TO_CHAR(ENTRANCE_DATE, 'YYYY-MM-DD') 입학년도
FROM 
	TB_STUDENT
WHERE 
	DEPARTMENT_NO IN('002')
ORDER BY 
	ENTRANCE_DATE ASC;*/



-- SQL1
-- 01번
SELECT 
	DEPARTMENT_NAME "학과 명",
	CATEGORY "계열"
FROM 
	 TB_DEPARTMENT;
	
	
-- 02번	
SELECT 
	DEPARTMENT_NAME || '의 정원은 ' || CAPACITY || '명 입니다.'  "학과별 정원"
FROM 
	 TB_DEPARTMENT;
	
	
	
-- 03번
SELECT
	STUDENT_NAME
FROM
	TB_STUDENT
WHERE 
	ABSENCE_YN  = 'Y'
	AND
	SUBSTR(STUDENT_SSN, 8, 1) = '2'
	AND
	DEPARTMENT_NO = '001';


-- 04번
SELECT
	STUDENT_NAME 
FROM
	TB_STUDENT
WHERE 
	STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119')
ORDER BY
	STUDENT_NAME DESC;


-- 05번
SELECT
	DEPARTMENT_NAME,
	CATEGORY
FROM
	TB_DEPARTMENT
WHERE 
	CAPACITY BETWEEN 20 AND 30;



-- 06번
SELECT
	PROFESSOR_NAME
FROM
	TB_PROFESSOR
WHERE 
	DEPARTMENT_NO IS NULL;



-- 07번
SELECT
	CLASS_NO
FROM
	TB_CLASS
WHERE 
	PREATTENDING_CLASS_NO IS NOT NULL;
''


-- 08번
SELECT
	DISTINCT CATEGORY
FROM
	 TB_DEPARTMENT;
	
	
	
-- 09번	
SELECT 
	STUDENT_NO,
	STUDENT_NAME,
	STUDENT_SSN 
FROM 
	TB_STUDENT
WHERE
	STUDENT_ADDRESS LIKE '%전주%'
	AND
	SUBSTR(STUDENT_NO , 2, 1) = '2'
	AND
	ABSENCE_YN = 'N'
	
	
	
	
	
-- 10번	
SELECT
	STUDENT_NO 학번,
	STUDENT_NAME 이름,
	To_CHAR(ENTRANCE_DATE, 'YYYY-MM-DD') 입학년도
FROM
 	TB_STUDENT
WHERE 
	DEPARTMENT_NO IN ('002')
ORDER BY
	ENTRANCE_DATE ASC;


-- SQL2
-- 01번
SELECT
	PROFESSOR_NAME,
	PROFESSOR_SSN 
FROM
 	TB_PROFESSOR
WHERE 
	LENGTH(PROFESSOR_NAME)!= 3;


-- 02번
-- 패스
SELECT
	PROFESSOR_NAME 교수이름,
 	FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(PROFESSOR_SSN, 1, 6), 'YYMMDD')) / 12) AS 나이,
  PROFESSOR_SSN
FROM
 	TB_PROFESSOR
WHERE
	SUBSTR(PROFESSOR_SSN, 8, 1) = '1'
ORDER BY 
	나이;


-- 03번
SELECT
	PROFESSOR_NAME 교수이름,
 	FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(PROFESSOR_SSN, 1, 6), 'YYMMDD')) / 12) AS 나이,
  PROFESSOR_SSN
FROM
 	TB_PROFESSOR
WHERE
	SUBSTR(PROFESSOR_SSN, 8, 1) = '1'
ORDER BY 
	나이;

-- 04번
SELECT
	SUBSTR(PROFESSOR_NAME, 2) 이름
FROM
 	TB_PROFESSOR
 	

-- 05번
SELECT
	STUDENT_NO,
	STUDENT_NAME
FROM
 	TB_STUDENT
WHERE
  -- 입학 일자에서 년도만 나오는 함수
	EXTRACT(YEAR FROM ENTRANCE_DATE)
	- EXTRACT(YEAR FROM TO_DATE('19'||SUBSTR(STUDENT_SSN, 1, 6),'YYYYMMDD')) > 19;


-- 06번
SELECT
	STUDENT_NO,
	STUDENT_NAME
FROM
 	TB_STUDENT
WHERE
 	-- A로 시작하지 않는 학번
	STUDENT_NO NOT LIKE 'A%';



-- 07번
SELECT
	 -- 평균 값을 소수점 이하 두 자리까지 반올림
	 ROUND(AVG(POINT), 1)
FROM
 	TB_GRADE
WHERE
	STUDENT_NO IN ('A517178');


-- 08번
SELECT
	DEPARTMENT_NO 학과번호,
	-- 그룹화 활용
	COUNT(*) 학생수
FROM
 	TB_STUDENT
GROUP BY
	DEPARTMENT_NO
ORDER BY 
-- 오름차순을 어떤 컬럼 기준으로 할 것인지
	1;


-- 09번
SELECT
	COUNT(*) 학생수
FROM
 	TB_STUDENT
WHERE 
	COACH_PROFESSOR_NO IS NULL;




-- 10번
SELECT
	-- 첫 4자리 추출
	SUBSTR(TERM_NO, 1,4) 년도,
	-- POINT 컬럼의 평균값을 계산하고, 소수점 첫째 자리까지 반올림
	ROUND(AVG(POINT),1) "년도 별 평점"
FROM
	TB_GRADE
WHERE
	STUDENT_NO = 'A112113'
GROUP BY 
	SUBSTR(TERM_NO,1,4)
ORDER BY
	1;


-- 11번
SELECT
	DEPARTMENT_NO,
	-- ABSENCE_YN = 'Y': 결석 여부가 'Y'인 경우 1을 반환 아니면 0
	-- 총 합산
	SUM(DECODE(ABSENCE_YN, 'Y', 1, 0))
FROM
	TB_STUDENT
GROUP BY 
	DEPARTMENT_NO
ORDER BY
	1;




-- 12번
SELECT
	STUDENT_NAME "동일이름",
	COUNT(*) "동명인 수" 
FROM
	TB_STUDENT
GROUP BY 
	STUDENT_NAME
HAVING 
	COUNT(*) > 1
ORDER BY
	1;



-- 13번
SELECT
	-- null일 경우 ''공백으로 대체
	NVL(SUBSTR(TERM_NO,1,4), ' ') AS 년도,
	NVL(SUBSTR(TERM_NO,5,2),' ') AS 학기,
	ROUND(AVG(POINT),1) "평점"
FROM
	TB_GRADE
WHERE
	STUDENT_NO = 'A112113'
GROUP BY
	-- 공백 생성 하려면 ROLLUP
	ROLLUP(SUBSTR(TERM_NO,1,4),SUBSTR(TERM_NO,5,2))
ORDER BY
	SUBSTR(TERM_NO,1,4);


























	







 
 
 



